name: Validation

on:
  push:
    branches:
    - main
    - dev

  pull_request:
    branches:
    - main
    - dev

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Check formatting
      run: cmake -D FORMAT_COMMAND=clang-format -P cmake/lint.cmake

  sanitize:
    needs: [lint]

    runs-on: ubuntu-latest

    env: { CC: clang }

    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake --preset=ci-sanitize

    - name: Build
      run: cmake --build build/sanitize

    - name: Test
      working-directory: build/sanitize
      env:
        ASAN_OPTIONS: "strict_string_checks=1:\
          detect_stack_use_after_return=1:\
          check_initialization_order=1:\
          strict_init_order=1:\
          detect_leaks=1:\
          halt_on_error=1"
        UBSAN_OPTIONS: "print_stacktrace=1:\
          halt_on_error=1"
      run: ctest --output-on-failure --no-tests=error

  test:
    needs: [lint]

    strategy:
      matrix:
        os: [macos-14, ubuntu-24.04, windows-2022]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install static analyzers
      if: matrix.os == 'ubuntu-24.04'
      run: >-
        sudo apt-get install clang-tidy -y -q

    - name: Setup MultiToolTask
      if: matrix.os == 'windows-2022'
      run: |
        Add-Content "$env:GITHUB_ENV" 'UseMultiToolTask=true'
        Add-Content "$env:GITHUB_ENV" 'EnforceProcessCountAcrossBuilds=true'

    - name: Configure
      shell: pwsh
      run: cmake "--preset=ci-$("${{ matrix.os }}".split("-")[0])"

    - name: Build
      shell: pwsh
      run: cmake --build build --config Debug

    - name: Test
      working-directory: build
      run: ctest --output-on-failure --no-tests=error -C Debug